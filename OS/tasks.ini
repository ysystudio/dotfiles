[+]
build_target=build_x86
test_target=test_x86

[file-build]
command:c,cpp=clang -O2 -Wall "$(VIM_FILEPATH)" -o "$(VIM_PATHNOEXT)" -lstdc++ -lm -msse3
command:go=go build -o "$(VIM_PATHNOEXT)" "$(VIM_FILEPATH)"
output=terminal
pos="bottom"
cwd=$(VIM_FILEDIR)
save=2

[file-run]
command="$(VIM_FILEPATH)"
command:c,cpp="$(VIM_PATHNOEXT)"
command:go="$(VIM_PATHNOEXT)"
command:python=python "$(VIM_FILENAME)"
command:javascript=node "$(VIM_FILENAME)"
command:sh=sh "$(VIM_FILENAME)"
command:lua=lua "$(VIM_FILENAME)"
command:perl=perl "$(VIM_FILENAME)"
command:ruby=ruby "$(VIM_FILENAME)"
command:zsh=zsh "$(VIM_FILENAME)"
command:bash=bash "$(VIM_FILENAME)"
command:fish=fish "$(VIM_FILENAME)"
command:php=php "$(VIM_FILENAME)"
command:erlang=escript "$(VIM_FILENAME)"
command:ps1=powershell -file "$(VIM_FILENAME)"
command:scala=scala "$(VIM_FILENAME)"
command:haskell=ghci "$(VIM_FILENAME)"
command:applescript=osascript "$(VIM_FILENAME)"
command:vim=:source %
output=terminal
cwd=$(VIM_FILEDIR)


[project-create]
command=xmake create -l $(-lang:c&++,&go,&rust,&c,c&uda,&objc,o&bjc++) -t $(-template:&console,shar&ed,stat&ic,qt.&quickapp,qt.&widgetapp)  $(-project_name)
cwd=<root>
output=terminal
pos='bottom'

[project-build]
command=xmake
cwd=$(VIM_FILEDIR)
output=terminal
pos='bottom'

[project-run]
command=xmake run
cwd=$(VIM_FILEDIR)
output=terminal

[grep]
command=rg -n --no-heading --color never "$(-word)" "<root>" -tcpp -tc -tpy -tvim -tgo -tasm
cwd=$(VIM_ROOT)
output=terminal
pos='bottom'
errorformat=%f:%l:%m
