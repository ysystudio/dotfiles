{
	"git.ignoreMissingGitWarning": true,
	"editor.wordWrap": "off",
	"editor.fontSize": 14,
	"editor.mouseWheelZoom": true,
	"workbench.iconTheme": "vscode-icons",
	"workbench.colorTheme": "Solarized Neue Bright",
	"python.terminal.executeInFileDir": true,
	"editor.suggestSelection": "first",
	"extensions.ignoreRecommendations": false,
	"terminal.integrated.inheritEnv": false,
	"workbench.activityBar.visible": true,
	"vsicons.dontShowNewVersionMessage": true,
	"explorer.confirmDelete": false,
	"explorer.confirmDragAndDrop": false,
	"files.autoSave": "onWindowChange",
	"python.terminal.activateEnvironment": true,
	"terminal.explorerKind": "external",
	"git.enableSmartCommit": true,
	"python.languageServer": "Pylance",
	"settingsSync.ignoredExtensions": [],
	"http.proxyAuthorization": null,
	"terminal.integrated.commandsToSkipShell": [
		"language-julia.interrupt"
	],
	"workbench.colorCustomizations": {
		"editor.selectionBackground": "#df7ef57c",
		"editor.selectionHighlightBorder": "#f7f3f3",
		"editor.findMatchBorder": "#eee7e7",
		"scrollbarSlider.background": "#c97554",
		"scrollbarSlider.hoverBackground": "#ff0000",
		"panel.border": "#00aaff"
	},
	"editor.minimap.enabled": true,
	"settingsSync.ignoredSettings": [],
	"workbench.editorAssociations": {
		"*.ipynb": "jupyter-notebook"
	},
	"python.analysis.completeFunctionParens": true,
	"security.workspace.trust.untrustedFiles": "newWindow",
	"notebook.cellToolbarLocation": {
		"default": "right",
		"jupyter-notebook": "left"
	},
	"terminal.integrated.defaultProfile.windows": "Command Prompt",
	"editor.accessibilitySupport": "off",
	"git.confirmSync": false,
	"editor.fontFamily": "'FiraCode Nerd Font Mono',Consolas, 'Courier New', monospace",
	"notebook.lineNumbers": "on",
	"leek-fund.funds": [
		[
			"009548",
			"420009",
			"003096",
			"003885",
			"005963",
			"003494",
			"163406",
			"000263",
			"519772",
			"100060"
		]
	],
	"leek-fund.fundSort": 2,
	"clangd.path": "/Users/shark/Library/Application Support/Code/User/globalStorage/llvm-vs-code-extensions.vscode-clangd/install/13.0.0/clangd_13.0.0/bin/clangd",
	"editor.inlineSuggest.enabled": true,
	"github.copilot.enable": {
		"*": true,
		"yaml": false,
		"plaintext": false,
		"markdown": false,
		"python": true,
		"cpp": false
	},
	"win-ca.inject": "append",
	"terminal.integrated.enableMultiLinePasteWarning": false,
	"leetcode.endpoint": "leetcode-cn",
	"leetcode.hint.configWebviewMarkdown": false,
	"leetcode.workspaceFolder": "/Users/shark/.leetcode",
	"leetcode.defaultLanguage": "python3",
	"leetcode.hint.commentDescription": false,
	"leetcode.hint.commandShortcut": false,
	"editor.lineNumbers": "relative",
	/* vim settings start */
	"vim.camelCaseMotion.enable": true,
	"vim.easymotion": true,
	"vim-surround": true,
	"vim.foldfix": true, // to avoid fold open up autocamatically
	"vim.sneak": false,
	"vim.surround": true,
	"vim.useCtrlKeys": false,
	"vim.useSystemClipboard": true,
	"vim.vimrc.enable": true,
	"vim.vimrc.path": "$HOME/dev/dotfiles/vscode/vsvimrc",
	"vim.handleKeys": {
		"<C-a>": false,
		"<C-f>": false,
		"<C-i>": true,
		"<C-o>": true,
		"<C-r>": true,
		"<C-s>": false,
		"<C-v>": true,
		"<C-w>": true
	},
	"vim.hlsearch": true,
	"vim.incsearch": true,
	"vim.leader": ";",
	"vim.normalModeKeyBindings": [
		{ // which key
			"before": [
				"<space>"
			],
			"commands": [
				"whichkey.show"
			]
		},
	],
	"vim.normalModeKeyBindingsNonRecursive": [
		{
			"before": [
				"<leader>",
				"f"
			],
			"commands": [
				"editor.action.formatDocument"
			]
		},
		{
			"before": [
				"z",
				"z",
			],
			"commands": [
				"editor.toggleFold"
			]
		},
		{
			"before": [
				"<leader>",
				"g",
				"q",
			],
			"commands": [
				"workbench.action.closeEditorsInGroup"
			]
		},
		{
			"before": [
				"<leader>",
				"u"
			],
			"commands": [
				"editor.action.referenceSearch.trigger"
			]
		},
		{
			"before": [
				"<leader>",
				"U"
			],
			"commands": [
				"references-view.findReferences"
			]
		},
		{
			"before": [
				"<leader>",
				"i",
				"n"
			],
			"commands": [
				"references-view.showCallHierarchy"
			]
		},
		// -- run
		{
			"before": [
				"<leader>",
				"r"
			],
			"commands": [
				"workbench.action.files.save",
				"workbench.action.debug.run"
			]
		},
		{
			"before": [
				"<leader>",
				"d",
				"r"
			],
			"commands": [
				"workbench.action.files.save",
				"workbench.action.debug.start"
			]
		},
		// -- debug
		{
			"before": [
				"<leader>",
				"d",
				"b"
			],
			"commands": [
				"editor.debug.action.toggleBreakpoint"
			]
		},
		{
			"before": [
				"<leader>",
				"d",
				"c"
			],
			"commands": [
				"editor.debug.action.conditionalBreakpoint"
			]
		},
		// -- problem nav
		{
			"before": [
				"<leader>",
				"d",
				"k"
			],
			"commands": [
				"editor.action.marker.prev"
			]
		},
		{
			"before": [
				"<leader>",
				"d",
				"j"
			],
			"commands": [
				"editor.action.marker.next"
			]
		},
		// -- git hunk nav
		{
			"before": [
				"<leader>",
				"k"
			],
			"commands": [
				"workbench.action.editor.previousChange",
				"editor.action.dirtydiff.previous"
			]
		},
		{
			"before": [
				"<leader>",
				"j"
			],
			"commands": [
				"workbench.action.editor.nextChange",
				"editor.action.dirtydiff.next"
			]
		},
		// git (un)stage 
		{
			"before": [
				"<leader>",
				"h",
				"s"
			],
			"commands": [
				"git.stage",
			]
		},
		{
			"before": [
				"<leader>",
				"h",
				"u"
			],
			"commands": [
				"git.unstage",
			]
		},
		{
			"before": [
				"<leader>",
				"h",
				"r"
			],
			"commands": [
				"git.revertSelectedRanges",
			]
		},
		// -- rename symbol
		{
			"before": [
				"<leader>",
				"r",
				"n"
			],
			"commands": [
				"editor.action.rename",
			]
		},
	],
	"vim.visualModeKeyBindings": [
		{ // which key
			"before": [
				"<space>"
			],
			"commands": [
				"whichkey.show"
			]
		},
		// repeatly indent in visual mode
		{
			"before": [
				">"
			],
			"commands": [
				"editor.action.indentLines"
			]
		},
		{
			"before": [
				"<"
			],
			"commands": [
				"editor.action.outdentLines"
			]
		}
	],
	"vim.visualModeKeyBindingsNonRecursive": [
		{
			"before": [
				"<leader>",
				"f"
			],
			"commands": [
				"editor.action.formatSelection"
			]
		},
		{ // p action will not override clipboard content
			"before": [
				"p"
			],
			"after": [
				"p",
				"g",
				"v",
				"y",
			]
		},
	],
	/* vim settings end */
	/* which key bindings */
	"whichkey.bindings": [
		{
			"key": "e",
			"name": "Show tree/explorer view",
			"type": "conditional",
			"bindings": [
				{
					"key": "",
					"name": "default",
					"type": "command",
					"command": "workbench.view.explorer"
				},
				{
					"key": "when:sideBarVisible && explorerViewletVisible",
					"name": "Hide explorer",
					"type": "command",
					"command": "workbench.action.toggleSidebarVisibility"
				}
			],
		},
		{
			"key": "o",
			"name": "Outline",
			"type": "conditional",
			"bindings": [
				{
					"key": "",
					"name": "default",
					"type": "command",
					"command": "extension.multiCommand.execute",
					"args": {
						"sequence": [
							"outline.focus",
							"outline.focus",
						]
					},
				},
				{
					"key": "when:outlinerExplorerView.active && view.outline.visible",
					"name": "Hide outline",
					"type": "command",
					"command": "workbench.action.toggleAuxiliaryBar"
				}
			],
		},
		{
			"key": "g",
			"name": "Source contrl",
			"type": "command",
			"command": "workbench.view.scm",
		},
		{
			"command": "workbench.action.quickOpen",
			"key": "f",
			"name": "Find file",
			"type": "command"
		},
		{
			"command": "workbench.view.search",
			"key": "w",
			"name": "Search Word",
			"type": "command"
		},
		{
			"command": "workbench.action.gotoSymbol",
			"key": "s",
			"name": "Search document symbol",
			"type": "command"
		},
		{
			"command": "workbench.action.showAllSymbols",
			"key": "S",
			"name": "Search project symbol",
			"type": "command"
		},
	],
}